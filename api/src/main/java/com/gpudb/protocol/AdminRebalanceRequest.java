/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#adminRebalance(AdminRebalanceRequest)}.
 * <p>
 * Rebalance the cluster so that all the nodes contain approximately equal
 * number of records.  The rebalance will also cause the shards to be (as much
 * as possible) equally distributed across all the ranks. Note that the system
 * may move any shards that were moved by system administrator using {@link
 * com.gpudb.GPUdb#adminAlterShards(AdminAlterShardsRequest)}
 */
public class AdminRebalanceRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("AdminRebalanceRequest")
            .namespace("com.gpudb")
            .fields()
                .name("tableNames").type().array().items().stringType().noDefault()
                .name("action").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * Specify 'start' to start rebalancing the cluster or 'stop' to
     * prematurely stop a previsouly issued rebalance request.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.AdminRebalanceRequest.Action#START START}
     *         <li> {@link com.gpudb.protocol.AdminRebalanceRequest.Action#STOP
     * STOP}
     * </ul>
     * A set of string constants for the parameter {@code action}.
     */
    public static final class Action {
        public static final String START = "start";
        public static final String STOP = "stop";

        private Action() {  }
    }


    /**
     * Optional parameters.
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.AdminRebalanceRequest.Options#RESHARD RESHARD}: If
     * {@code true}, then all the nodes in the cluster will be assigned
     * approximately the same number of shards. Note that for big clusters,
     * this data transfer could be time consuming and also result in delay in
     * responding to queries for busy clusters.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE TRUE}.
     * </ul>
     * A set of string constants for the parameter {@code options}.
     */
    public static final class Options {

        /**
         * If {@code true}, then all the nodes in the cluster will be assigned
         * approximately the same number of shards. Note that for big clusters,
         * this data transfer could be time consuming and also result in delay
         * in responding to queries for busy clusters.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE TRUE}.
         */
        public static final String RESHARD = "reshard";
        public static final String TRUE = "true";
        public static final String FALSE = "false";

        private Options() {  }
    }

    private List<String> tableNames;
    private String action;
    private Map<String, String> options;


    /**
     * Constructs an AdminRebalanceRequest object with default parameters.
     */
    public AdminRebalanceRequest() {
        tableNames = new ArrayList<>();
        action = "";
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs an AdminRebalanceRequest object with the specified
     * parameters.
     * 
     * @param tableNames  Sepcify the tables here if only specific tables have
     *                    to be rebalanced.  Leave this empty to rebalance all
     *                    the tables.  Note that only the tables which have no
     *                    primary or shard key can be rebalanced.
     * @param action  Specify 'start' to start rebalancing the cluster or
     *                'stop' to prematurely stop a previsouly issued rebalance
     *                request.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AdminRebalanceRequest.Action#START
     *                START}
     *                        <li> {@link
     *                com.gpudb.protocol.AdminRebalanceRequest.Action#STOP
     *                STOP}
     *                </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#RESHARD
     *                 RESHARD}: If {@code true}, then all the nodes in the
     *                 cluster will be assigned approximately the same number
     *                 of shards. Note that for big clusters, this data
     *                 transfer could be time consuming and also result in
     *                 delay in responding to queries for busy clusters.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}.
     *                 </ul>
     * 
     */
    public AdminRebalanceRequest(List<String> tableNames, String action, Map<String, String> options) {
        this.tableNames = (tableNames == null) ? new ArrayList<String>() : tableNames;
        this.action = (action == null) ? "" : action;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * 
     * @return Sepcify the tables here if only specific tables have to be
     *         rebalanced.  Leave this empty to rebalance all the tables.  Note
     *         that only the tables which have no primary or shard key can be
     *         rebalanced.
     * 
     */
    public List<String> getTableNames() {
        return tableNames;
    }

    /**
     * 
     * @param tableNames  Sepcify the tables here if only specific tables have
     *                    to be rebalanced.  Leave this empty to rebalance all
     *                    the tables.  Note that only the tables which have no
     *                    primary or shard key can be rebalanced.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public AdminRebalanceRequest setTableNames(List<String> tableNames) {
        this.tableNames = (tableNames == null) ? new ArrayList<String>() : tableNames;
        return this;
    }

    /**
     * 
     * @return Specify 'start' to start rebalancing the cluster or 'stop' to
     *         prematurely stop a previsouly issued rebalance request.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.AdminRebalanceRequest.Action#START START}
     *                 <li> {@link
     *         com.gpudb.protocol.AdminRebalanceRequest.Action#STOP STOP}
     *         </ul>
     * 
     */
    public String getAction() {
        return action;
    }

    /**
     * 
     * @param action  Specify 'start' to start rebalancing the cluster or
     *                'stop' to prematurely stop a previsouly issued rebalance
     *                request.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AdminRebalanceRequest.Action#START
     *                START}
     *                        <li> {@link
     *                com.gpudb.protocol.AdminRebalanceRequest.Action#STOP
     *                STOP}
     *                </ul>
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public AdminRebalanceRequest setAction(String action) {
        this.action = (action == null) ? "" : action;
        return this;
    }

    /**
     * 
     * @return Optional parameters.
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.AdminRebalanceRequest.Options#RESHARD
     *         RESHARD}: If {@code true}, then all the nodes in the cluster
     *         will be assigned approximately the same number of shards. Note
     *         that for big clusters, this data transfer could be time
     *         consuming and also result in delay in responding to queries for
     *         busy clusters.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE TRUE}.
     *         </ul>
     * 
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#RESHARD
     *                 RESHARD}: If {@code true}, then all the nodes in the
     *                 cluster will be assigned approximately the same number
     *                 of shards. Note that for big clusters, this data
     *                 transfer could be time consuming and also result in
     *                 delay in responding to queries for busy clusters.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}.
     *                 </ul>
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public AdminRebalanceRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableNames;

            case 1:
                return this.action;

            case 2:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableNames = (List<String>)value;
                break;

            case 1:
                this.action = (String)value;
                break;

            case 2:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        AdminRebalanceRequest that = (AdminRebalanceRequest)obj;

        return ( this.tableNames.equals( that.tableNames )
                 && this.action.equals( that.action )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableNames" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableNames ) );
        builder.append( ", " );
        builder.append( gd.toString( "action" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.action ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableNames.hashCode();
        hashCode = (31 * hashCode) + this.action.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }

}
