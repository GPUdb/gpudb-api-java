/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#alterSchema(AlterSchemaRequest)}.
 * <p>
 * Used to change the name of a SQL-style <a
 * href="../../../../../../concepts/schemas/" target="_top">schema</a>,
 * specified in {@code schemaName}.
 */
public class AlterSchemaRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("AlterSchemaRequest")
            .namespace("com.gpudb")
            .fields()
                .name("schemaName").type().stringType().noDefault()
                .name("action").type().stringType().noDefault()
                .name("value").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * Modification operation to be applied
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.AlterSchemaRequest.Action#RENAME_SCHEMA
     * RENAME_SCHEMA}: Renames a schema to {@code value}. Has the same naming
     * restrictions as <a href="../../../../../../concepts/tables/"
     * target="_top">tables</a>.
     * </ul>
     * A set of string constants for the parameter {@code action}.
     */
    public static final class Action {

        /**
         * Renames a schema to {@code value}. Has the same naming restrictions
         * as <a href="../../../../../../concepts/tables/"
         * target="_top">tables</a>.
         */
        public static final String RENAME_SCHEMA = "rename_schema";

        private Action() {  }
    }

    private String schemaName;
    private String action;
    private String value;
    private Map<String, String> options;


    /**
     * Constructs an AlterSchemaRequest object with default parameters.
     */
    public AlterSchemaRequest() {
        schemaName = "";
        action = "";
        value = "";
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs an AlterSchemaRequest object with the specified parameters.
     * 
     * @param schemaName  Name of the schema to be altered.
     * @param action  Modification operation to be applied
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AlterSchemaRequest.Action#RENAME_SCHEMA
     *                RENAME_SCHEMA}: Renames a schema to {@code value}. Has
     *                the same naming restrictions as <a
     *                href="../../../../../../concepts/tables/"
     *                target="_top">tables</a>.
     *                </ul>
     * @param value  The value of the modification, depending on {@code
     *               action}.  For now the only value of {@code action} is
     *               {@code rename_schema}.  In this case the value is the new
     *               name of the schema.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     */
    public AlterSchemaRequest(String schemaName, String action, String value, Map<String, String> options) {
        this.schemaName = (schemaName == null) ? "" : schemaName;
        this.action = (action == null) ? "" : action;
        this.value = (value == null) ? "" : value;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * 
     * @return Name of the schema to be altered.
     * 
     */
    public String getSchemaName() {
        return schemaName;
    }

    /**
     * 
     * @param schemaName  Name of the schema to be altered.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public AlterSchemaRequest setSchemaName(String schemaName) {
        this.schemaName = (schemaName == null) ? "" : schemaName;
        return this;
    }

    /**
     * 
     * @return Modification operation to be applied
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.AlterSchemaRequest.Action#RENAME_SCHEMA
     *         RENAME_SCHEMA}: Renames a schema to {@code value}. Has the same
     *         naming restrictions as <a
     *         href="../../../../../../concepts/tables/"
     *         target="_top">tables</a>.
     *         </ul>
     * 
     */
    public String getAction() {
        return action;
    }

    /**
     * 
     * @param action  Modification operation to be applied
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AlterSchemaRequest.Action#RENAME_SCHEMA
     *                RENAME_SCHEMA}: Renames a schema to {@code value}. Has
     *                the same naming restrictions as <a
     *                href="../../../../../../concepts/tables/"
     *                target="_top">tables</a>.
     *                </ul>
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public AlterSchemaRequest setAction(String action) {
        this.action = (action == null) ? "" : action;
        return this;
    }

    /**
     * 
     * @return The value of the modification, depending on {@code action}.  For
     *         now the only value of {@code action} is {@code rename_schema}.
     *         In this case the value is the new name of the schema.
     * 
     */
    public String getValue() {
        return value;
    }

    /**
     * 
     * @param value  The value of the modification, depending on {@code
     *               action}.  For now the only value of {@code action} is
     *               {@code rename_schema}.  In this case the value is the new
     *               name of the schema.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public AlterSchemaRequest setValue(String value) {
        this.value = (value == null) ? "" : value;
        return this;
    }

    /**
     * 
     * @return Optional parameters.  The default value is an empty {@link Map}.
     * 
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * 
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public AlterSchemaRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.schemaName;

            case 1:
                return this.action;

            case 2:
                return this.value;

            case 3:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.schemaName = (String)value;
                break;

            case 1:
                this.action = (String)value;
                break;

            case 2:
                this.value = (String)value;
                break;

            case 3:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        AlterSchemaRequest that = (AlterSchemaRequest)obj;

        return ( this.schemaName.equals( that.schemaName )
                 && this.action.equals( that.action )
                 && this.value.equals( that.value )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "schemaName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.schemaName ) );
        builder.append( ", " );
        builder.append( gd.toString( "action" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.action ) );
        builder.append( ", " );
        builder.append( gd.toString( "value" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.value ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.schemaName.hashCode();
        hashCode = (31 * hashCode) + this.action.hashCode();
        hashCode = (31 * hashCode) + this.value.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }

}
