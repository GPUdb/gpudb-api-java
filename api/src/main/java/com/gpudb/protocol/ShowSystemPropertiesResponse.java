/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#showSystemProperties(ShowSystemPropertiesRequest)}.
 */
public class ShowSystemPropertiesResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ShowSystemPropertiesResponse")
            .namespace("com.gpudb")
            .fields()
                .name("propertyMap").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * A map of server configuration parameters and version information.
     * <ul>
     *         <li> conf.enable_worker_http_servers: Boolean value indicating
     * whether the system is configured for multi-head ingestion. Values: TRUE,
     * FALSE.
     * <p>
     *         <li> conf.worker_http_server_ips: Semicolon (';') separated
     * string of IP addresses of all the ingestion-enabled worker heads of the
     * system.
     *         <li> conf.worker_http_server_ports: Semicolon (';') separated
     * string of the port numbers of all the ingestion-enabled worker ranks of
     * the system.
     * </ul>
     * A set of string constants for the parameter {@code propertyMap}.
     */
    public static final class PropertyMap {

        /**
         * Boolean value indicating whether the system is configured for
         * multi-head ingestion. Values: TRUE, FALSE.
         */
        public static final String CONF_ENABLE_WORKER_HTTP_SERVERS = "conf.enable_worker_http_servers";

        /**
         * Indicates that the system is configured for multi-head ingestion.
         */
        public static final String TRUE = "TRUE";

        /**
         * Indicates that the system is NOT configured for multi-head
         * ingestion.
         */
        public static final String FALSE = "FALSE";

        /**
         * Semicolon (';') separated string of IP addresses of all the
         * ingestion-enabled worker heads of the system.
         */
        public static final String CONF_WORKER_HTTP_SERVER_IPS = "conf.worker_http_server_ips";

        /**
         * Semicolon (';') separated string of the port numbers of all the
         * ingestion-enabled worker ranks of the system.
         */
        public static final String CONF_WORKER_HTTP_SERVER_PORTS = "conf.worker_http_server_ports";

        private PropertyMap() {  }
    }

    private Map<String, String> propertyMap;


    /**
     * Constructs a ShowSystemPropertiesResponse object with default
     * parameters.
     */
    public ShowSystemPropertiesResponse() {
    }

    /**
     * 
     * @return A map of server configuration parameters and version
     *         information.
     *         <ul>
     *                 <li> conf.enable_worker_http_servers: Boolean value
     *         indicating whether the system is configured for multi-head
     *         ingestion. Values: TRUE, FALSE.
     *                 <li> conf.worker_http_server_ips: Semicolon (';')
     *         separated string of IP addresses of all the ingestion-enabled
     *         worker heads of the system.
     *                 <li> conf.worker_http_server_ports: Semicolon (';')
     *         separated string of the port numbers of all the
     *         ingestion-enabled worker ranks of the system.
     *         </ul>
     * 
     */
    public Map<String, String> getPropertyMap() {
        return propertyMap;
    }

    /**
     * 
     * @param propertyMap  A map of server configuration parameters and version
     *                     information.
     *                     <ul>
     *                             <li> conf.enable_worker_http_servers:
     *                     Boolean value indicating whether the system is
     *                     configured for multi-head ingestion. Values: TRUE,
     *                     FALSE.
     *                             <li> conf.worker_http_server_ips: Semicolon
     *                     (';') separated string of IP addresses of all the
     *                     ingestion-enabled worker heads of the system.
     *                             <li> conf.worker_http_server_ports:
     *                     Semicolon (';') separated string of the port numbers
     *                     of all the ingestion-enabled worker ranks of the
     *                     system.
     *                     </ul>
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowSystemPropertiesResponse setPropertyMap(Map<String, String> propertyMap) {
        this.propertyMap = (propertyMap == null) ? new LinkedHashMap<String, String>() : propertyMap;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.propertyMap;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.propertyMap = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ShowSystemPropertiesResponse that = (ShowSystemPropertiesResponse)obj;

        return ( this.propertyMap.equals( that.propertyMap ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "propertyMap" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.propertyMap ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.propertyMap.hashCode();
        return hashCode;
    }

}
