/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gisfederal.gpudb.protocol;

import java.nio.ByteBuffer;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of parameters for the raw wrapper for GPUdb responses.
 */
public class GaiaResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("GaiaResponse")
            .namespace("com.gisfederal.gpudb")
            .fields()
                .name("status").type().stringType().noDefault()
                .name("message").type().stringType().noDefault()
                .name("dataType").type().stringType().noDefault()
                .name("data").type().bytesType().noDefault()
                .name("dataStr").type().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private String status;
    private String message;
    private String dataType;
    private ByteBuffer data;
    private String dataStr;


    /**
     * Constructs a GaiaResponse object with default parameters.
     */
    public GaiaResponse() {
    }
    public String getStatus() {
        return status;
    }

    /**
     * 
     * @param status
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public GaiaResponse setStatus(String status) {
        this.status = (status == null) ? "" : status;
        return this;
    }
    public String getMessage() {
        return message;
    }

    /**
     * 
     * @param message
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public GaiaResponse setMessage(String message) {
        this.message = (message == null) ? "" : message;
        return this;
    }
    public String getDataType() {
        return dataType;
    }

    /**
     * 
     * @param dataType
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public GaiaResponse setDataType(String dataType) {
        this.dataType = (dataType == null) ? "" : dataType;
        return this;
    }
    public ByteBuffer getData() {
        return data;
    }

    /**
     * 
     * @param data
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public GaiaResponse setData(ByteBuffer data) {
        this.data = (data == null) ? ByteBuffer.wrap( new byte[0] ) : data;
        return this;
    }
    public String getDataStr() {
        return dataStr;
    }

    /**
     * 
     * @param dataStr
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public GaiaResponse setDataStr(String dataStr) {
        this.dataStr = (dataStr == null) ? "" : dataStr;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.status;

            case 1:
                return this.message;

            case 2:
                return this.dataType;

            case 3:
                return this.data;

            case 4:
                return this.dataStr;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.status = (String)value;
                break;

            case 1:
                this.message = (String)value;
                break;

            case 2:
                this.dataType = (String)value;
                break;

            case 3:
                this.data = (ByteBuffer)value;
                break;

            case 4:
                this.dataStr = (String)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        GaiaResponse that = (GaiaResponse)obj;

        return ( this.status.equals( that.status )
                 && this.message.equals( that.message )
                 && this.dataType.equals( that.dataType )
                 && this.data.equals( that.data )
                 && this.dataStr.equals( that.dataStr ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( gd.toString( "status" ) );
        builder.append( gd.toString( ":" ) );
        builder.append( gd.toString( this.status ) );
        builder.append( gd.toString( "," ) );
        builder.append( gd.toString( "message" ) );
        builder.append( gd.toString( ":" ) );
        builder.append( gd.toString( this.message ) );
        builder.append( gd.toString( "," ) );
        builder.append( gd.toString( "dataType" ) );
        builder.append( gd.toString( ":" ) );
        builder.append( gd.toString( this.dataType ) );
        builder.append( gd.toString( "," ) );
        builder.append( gd.toString( "data" ) );
        builder.append( gd.toString( ":" ) );
        builder.append( gd.toString( this.data ) );
        builder.append( gd.toString( "," ) );
        builder.append( gd.toString( "dataStr" ) );
        builder.append( gd.toString( ":" ) );
        builder.append( gd.toString( this.dataStr ) );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.status.hashCode();
        hashCode = (31 * hashCode) + this.message.hashCode();
        hashCode = (31 * hashCode) + this.dataType.hashCode();
        hashCode = (31 * hashCode) + this.data.hashCode();
        hashCode = (31 * hashCode) + this.dataStr.hashCode();
        return hashCode;
    }

}
