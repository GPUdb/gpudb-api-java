/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gisfederal.gpudb.protocol;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of results returned by {@link
 * com.gisfederal.gpudb.GPUdb#showTableProperties(ShowTablePropertiesRequest)}.
 */
public class ShowTablePropertiesResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ShowTablePropertiesResponse")
            .namespace("com.gisfederal.gpudb")
            .fields()
                .name("tableNames").type().array().items().stringType().noDefault()
                .name("propertiesMaps").type().array().items().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * A list of maps which contains the properties of the tables in the order
     * they are listed in the {@code tableNames} list. Each map has the
     * following two possible entries:
     * A set of string constants for the parameter {@code propertiesMaps}.
     */
    public static final class PropertiesMaps {

        /**
         * The presence of this key-value pair indicates that the respective
         * set is a parent set. The value says whether the set allows duplicate
         * children or not.
         */
        public static final String ALLOW_DUPLICATE_CHILDREN = "allow_duplicate_children";
        public static final String FALSE = "false";
        public static final String TRUE = "true";

        /**
         * Indicates whether the respective set is protected or not.
         */
        public static final String PROTECTED = "protected";

        /**
         * The value of TTL setting, in minutes, for the respective set (-1 if
         * it will never expire).  This is not the remaining amount of time
         * before the set expires.
         */
        public static final String SET_TTL = "set_ttl";

        /**
         * The remaining amount of minutes before the respective set expires
         * (-1 if it will never expire).  This value may be different from the
         * set's TTL setting.
         */
        public static final String REMAINING_SET_TTL = "remaining_set_ttl";

        private PropertiesMaps() {  }
    }

    private List<String> tableNames;
    private List<Map<String, String>> propertiesMaps;


    /**
     * Constructs a ShowTablePropertiesResponse object with default parameters.
     */
    public ShowTablePropertiesResponse() {
    }

    /**
     * 
     * @return Value of {@code tableNames}.
     * 
     */
    public List<String> getTableNames() {
        return tableNames;
    }

    /**
     * 
     * @param tableNames  Value of {@code tableNames}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowTablePropertiesResponse setTableNames(List<String> tableNames) {
        this.tableNames = (tableNames == null) ? new ArrayList<String>() : tableNames;
        return this;
    }

    /**
     * 
     * @return A list of maps which contains the properties of the tables in
     *         the order they are listed in the {@code tableNames} list. Each
     *         map has the following two possible entries:
     * 
     */
    public List<Map<String, String>> getPropertiesMaps() {
        return propertiesMaps;
    }

    /**
     * 
     * @param propertiesMaps  A list of maps which contains the properties of
     *                        the tables in the order they are listed in the
     *                        {@code tableNames} list. Each map has the
     *                        following two possible entries:
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowTablePropertiesResponse setPropertiesMaps(List<Map<String, String>> propertiesMaps) {
        this.propertiesMaps = (propertiesMaps == null) ? new ArrayList<Map<String, String>>() : propertiesMaps;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableNames;

            case 1:
                return this.propertiesMaps;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableNames = (List<String>)value;
                break;

            case 1:
                this.propertiesMaps = (List<Map<String, String>>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ShowTablePropertiesResponse that = (ShowTablePropertiesResponse)obj;

        return ( this.tableNames.equals( that.tableNames )
                 && this.propertiesMaps.equals( that.propertiesMaps ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( gd.toString( "tableNames" ) );
        builder.append( gd.toString( ":" ) );
        builder.append( gd.toString( this.tableNames ) );
        builder.append( gd.toString( "," ) );
        builder.append( gd.toString( "propertiesMaps" ) );
        builder.append( gd.toString( ":" ) );
        builder.append( gd.toString( this.propertiesMaps ) );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableNames.hashCode();
        hashCode = (31 * hashCode) + this.propertiesMaps.hashCode();
        return hashCode;
    }

}
