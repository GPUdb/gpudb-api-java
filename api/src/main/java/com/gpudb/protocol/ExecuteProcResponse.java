/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of results returned by {@link com.gpudb.GPUdb#executeProc(ExecuteProcRequest)}.
 */
public class ExecuteProcResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ExecuteProcResponse")
            .namespace("com.gpudb")
            .fields()
                .name("runId").type().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private String runId;


    /**
     * Constructs an ExecuteProcResponse object with default parameters.
     */
    public ExecuteProcResponse() {
    }

    /**
     * 
     * @return The run ID of the running proc instance. This may be passed to {@link
     *         com.gpudb.GPUdb#showProcStatus(ShowProcStatusRequest)} to obtain status information, or {@link
     *         com.gpudb.GPUdb#killProc(KillProcRequest)} to kill the proc instance.
     * 
     */
    public String getRunId() {
        return runId;
    }

    /**
     * 
     * @param runId  The run ID of the running proc instance. This may be passed to {@link
     *               com.gpudb.GPUdb#showProcStatus(ShowProcStatusRequest)} to obtain status information, or {@link
     *               com.gpudb.GPUdb#killProc(KillProcRequest)} to kill the proc instance.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ExecuteProcResponse setRunId(String runId) {
        this.runId = (runId == null) ? "" : runId;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.runId;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.runId = (String)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ExecuteProcResponse that = (ExecuteProcResponse)obj;

        return ( this.runId.equals( that.runId ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "runId" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.runId ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.runId.hashCode();
        return hashCode;
    }

}
