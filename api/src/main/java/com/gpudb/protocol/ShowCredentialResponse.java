/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#showCredential(ShowCredentialRequest)}.
 */
public class ShowCredentialResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ShowCredentialResponse")
            .namespace("com.gpudb")
            .fields()
                .name("credentialNames").type().array().items().stringType().noDefault()
                .name("credentialTypes").type().array().items().stringType().noDefault()
                .name("credentialIdentities").type().array().items().stringType().noDefault()
                .name("credentials").type().array().items().stringType().noDefault()
                .name("additionalInfo").type().array().items().map().values().stringType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private List<String> credentialNames;
    private List<String> credentialTypes;
    private List<String> credentialIdentities;
    private List<String> credentials;
    private List<Map<String, String>> additionalInfo;
    private Map<String, String> info;


    /**
     * Constructs a ShowCredentialResponse object with default parameters.
     */
    public ShowCredentialResponse() {
    }

    /**
     * 
     * @return A list of all credential names.
     * 
     */
    public List<String> getCredentialNames() {
        return credentialNames;
    }

    /**
     * 
     * @param credentialNames  A list of all credential names.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowCredentialResponse setCredentialNames(List<String> credentialNames) {
        this.credentialNames = (credentialNames == null) ? new ArrayList<String>() : credentialNames;
        return this;
    }

    /**
     * 
     * @return A list of each credential's type.
     * 
     */
    public List<String> getCredentialTypes() {
        return credentialTypes;
    }

    /**
     * 
     * @param credentialTypes  A list of each credential's type.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowCredentialResponse setCredentialTypes(List<String> credentialTypes) {
        this.credentialTypes = (credentialTypes == null) ? new ArrayList<String>() : credentialTypes;
        return this;
    }

    /**
     * 
     * @return A list of each credential's identity.
     * 
     */
    public List<String> getCredentialIdentities() {
        return credentialIdentities;
    }

    /**
     * 
     * @param credentialIdentities  A list of each credential's identity.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowCredentialResponse setCredentialIdentities(List<String> credentialIdentities) {
        this.credentialIdentities = (credentialIdentities == null) ? new ArrayList<String>() : credentialIdentities;
        return this;
    }

    /**
     * 
     * @return A list of each credential's create_credential_request JSON
     *         encoded structure.
     * 
     */
    public List<String> getCredentials() {
        return credentials;
    }

    /**
     * 
     * @param credentials  A list of each credential's
     *                     create_credential_request JSON encoded structure.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowCredentialResponse setCredentials(List<String> credentials) {
        this.credentials = (credentials == null) ? new ArrayList<String>() : credentials;
        return this;
    }

    /**
     * 
     * @return Additional information about the respective credential in {@code
     *         credentialNames}.
     * 
     */
    public List<Map<String, String>> getAdditionalInfo() {
        return additionalInfo;
    }

    /**
     * 
     * @param additionalInfo  Additional information about the respective
     *                        credential in {@code credentialNames}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowCredentialResponse setAdditionalInfo(List<Map<String, String>> additionalInfo) {
        this.additionalInfo = (additionalInfo == null) ? new ArrayList<Map<String, String>>() : additionalInfo;
        return this;
    }

    /**
     * 
     * @return Additional information.
     * 
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * 
     * @param info  Additional information.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowCredentialResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.credentialNames;

            case 1:
                return this.credentialTypes;

            case 2:
                return this.credentialIdentities;

            case 3:
                return this.credentials;

            case 4:
                return this.additionalInfo;

            case 5:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.credentialNames = (List<String>)value;
                break;

            case 1:
                this.credentialTypes = (List<String>)value;
                break;

            case 2:
                this.credentialIdentities = (List<String>)value;
                break;

            case 3:
                this.credentials = (List<String>)value;
                break;

            case 4:
                this.additionalInfo = (List<Map<String, String>>)value;
                break;

            case 5:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ShowCredentialResponse that = (ShowCredentialResponse)obj;

        return ( this.credentialNames.equals( that.credentialNames )
                 && this.credentialTypes.equals( that.credentialTypes )
                 && this.credentialIdentities.equals( that.credentialIdentities )
                 && this.credentials.equals( that.credentials )
                 && this.additionalInfo.equals( that.additionalInfo )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "credentialNames" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.credentialNames ) );
        builder.append( ", " );
        builder.append( gd.toString( "credentialTypes" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.credentialTypes ) );
        builder.append( ", " );
        builder.append( gd.toString( "credentialIdentities" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.credentialIdentities ) );
        builder.append( ", " );
        builder.append( gd.toString( "credentials" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.credentials ) );
        builder.append( ", " );
        builder.append( gd.toString( "additionalInfo" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.additionalInfo ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.credentialNames.hashCode();
        hashCode = (31 * hashCode) + this.credentialTypes.hashCode();
        hashCode = (31 * hashCode) + this.credentialIdentities.hashCode();
        hashCode = (31 * hashCode) + this.credentials.hashCode();
        hashCode = (31 * hashCode) + this.additionalInfo.hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }

}
